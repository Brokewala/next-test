name: Deploy Next.js to FTP with ZIP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy ZIP to FTP
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies and build
        run: |
          npm install
          npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Prepare deployment folder
        run: |
          mkdir -p deploy/.next
          cp -r .next/standalone/. deploy/
          cp -r .next/static deploy/.next/
          cp -r public deploy/
          cp -r prisma deploy/
          echo "<?php
          \$zipFile = 'app.zip';
          if (!file_exists(\$zipFile)) { echo 'Fichier ZIP non trouvé.'; exit; }
          \$zip = new ZipArchive;
          if (\$zip->open(\$zipFile) === TRUE) {
              \$zip->extractTo('.');
              \$zip->close();
              unlink(\$zipFile);
              unlink(__FILE__);
              echo 'Déploiement terminé avec succès.';
          } else {
              echo 'Erreur lors de l\\'extraction.';
          }
          ?>" > deploy/unzip.php
          cd deploy && zip -r ../app.zip .

      - name: Copy ZIP and unzip script
        run: |
          mkdir ftp-upload
          cp app.zip ftp-upload/
          cp deploy/unzip.php ftp-upload/

      - name: Upload to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ftp-upload/
          server-dir: /

      - name: Trigger unzip.php via HTTP request
        run: |
          curl -s https://duka.lapostecomores.com/unzip.php || echo "Erreur de déploiement"
